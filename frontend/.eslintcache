[{"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\index.js":"1","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\store.js":"2","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\App.js":"3","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\reducers\\productReducers.js":"4","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\reducers\\orderReducers.js":"5","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\reducers\\cartReducers.js":"6","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\reducers\\userReducers.js":"7","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\reducers\\categoryReducers.js":"8","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\Header.js":"9","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\constants\\orderConstants.js":"10","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\constants\\productConstants.js":"11","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\constants\\cartConstants.js":"12","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\constants\\userConstants.js":"13","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\constants\\categoryConstants.js":"14","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\actions\\userActions.js":"15","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\serviceWorker.js":"16","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\Footer.js":"17","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\actions\\categoryActions.js":"18","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\ProductCarousel.js":"19","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\actions\\productActions.js":"20","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\Loader.js":"21","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\Message.js":"22","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\Paginate.js":"23","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\Product.js":"24","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\Rating.js":"25","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\FormContainer.js":"26","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\SignupProvider.js":"27","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\Icon.js":"28","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\constants\\key.js":"29","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\Meta.js":"30","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\actions\\cartActions.js":"31","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\ContentProvider.js":"32","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\actions\\orderActions.js":"33","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\TakeMoney.js":"34","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\auth\\LoginPage.js":"35","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\layout\\HomePage.js":"36","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\cart\\CartPage.js":"37","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\profile\\ProfilePage.js":"38","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\user\\UserEditPage.js":"39","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\products\\ProductEditPage.js":"40","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\categories\\CategoryListPage.js":"41","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\subcategories\\SubcategoryListPage.js":"42","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\categories\\CategoryEditPage.js":"43","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\subcategories\\SubcategoryEditPage.js":"44","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\orders\\OrderListPage.js":"45","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\orders\\OrderPage.js":"46","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\auth\\RegisterPage.js":"47","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\products\\ProductPage.js":"48","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\products\\ProductListPage.js":"49","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\user\\UserListPage.js":"50","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\reducers\\subCategoryReducers.js":"51","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\actions\\subcategoryAction.js":"52","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\constants\\subcategoryConstants.js":"53"},{"size":709,"mtime":1610972147764,"results":"54","hashOfConfig":"55"},{"size":3220,"mtime":1610333373342,"results":"56","hashOfConfig":"55"},{"size":3682,"mtime":1610973261674,"results":"57","hashOfConfig":"55"},{"size":3751,"mtime":1609640919904,"results":"58","hashOfConfig":"55"},{"size":3491,"mtime":1609640919870,"results":"59","hashOfConfig":"55"},{"size":1655,"mtime":1610972105668,"results":"60","hashOfConfig":"55"},{"size":3611,"mtime":1609640919938,"results":"61","hashOfConfig":"55"},{"size":2665,"mtime":1609855514244,"results":"62","hashOfConfig":"55"},{"size":3946,"mtime":1610973261674,"results":"63","hashOfConfig":"55"},{"size":1264,"mtime":1609640865511,"results":"64","hashOfConfig":"55"},{"size":1526,"mtime":1609640865547,"results":"65","hashOfConfig":"55"},{"size":330,"mtime":1609774971460,"results":"66","hashOfConfig":"55"},{"size":1508,"mtime":1609640865673,"results":"67","hashOfConfig":"55"},{"size":1086,"mtime":1609854039599,"results":"68","hashOfConfig":"55"},{"size":8172,"mtime":1609859643968,"results":"69","hashOfConfig":"55"},{"size":5227,"mtime":1609641497859,"results":"70","hashOfConfig":"55"},{"size":333,"mtime":1609642624098,"results":"71","hashOfConfig":"55"},{"size":4171,"mtime":1609934608325,"results":"72","hashOfConfig":"55"},{"size":1239,"mtime":1610935541766,"results":"73","hashOfConfig":"55"},{"size":5853,"mtime":1609684782164,"results":"74","hashOfConfig":"55"},{"size":405,"mtime":1609676988512,"results":"75","hashOfConfig":"55"},{"size":250,"mtime":1609676988512,"results":"76","hashOfConfig":"55"},{"size":778,"mtime":1609678171100,"results":"77","hashOfConfig":"55"},{"size":835,"mtime":1609677752906,"results":"78","hashOfConfig":"55"},{"size":1633,"mtime":1609677280206,"results":"79","hashOfConfig":"55"},{"size":347,"mtime":1609690008248,"results":"80","hashOfConfig":"55"},{"size":476,"mtime":1609733906779,"results":"81","hashOfConfig":"55"},{"size":1029,"mtime":1609688481105,"results":"82","hashOfConfig":"55"},{"size":58,"mtime":1609734530007,"results":"83","hashOfConfig":"55"},{"size":484,"mtime":1609755570391,"results":"84","hashOfConfig":"55"},{"size":2639,"mtime":1609954654053,"results":"85","hashOfConfig":"55"},{"size":584,"mtime":1610801048385,"results":"86","hashOfConfig":"55"},{"size":5778,"mtime":1610107561766,"results":"87","hashOfConfig":"55"},{"size":1676,"mtime":1610113739041,"results":"88","hashOfConfig":"55"},{"size":2626,"mtime":1610329302090,"results":"89","hashOfConfig":"55"},{"size":4247,"mtime":1610978239625,"results":"90","hashOfConfig":"55"},{"size":6824,"mtime":1610972389593,"results":"91","hashOfConfig":"55"},{"size":5784,"mtime":1610329302095,"results":"92","hashOfConfig":"55"},{"size":3238,"mtime":1610329302086,"results":"93","hashOfConfig":"55"},{"size":9740,"mtime":1610930915096,"results":"94","hashOfConfig":"55"},{"size":3284,"mtime":1610336598682,"results":"95","hashOfConfig":"55"},{"size":3445,"mtime":1610367076477,"results":"96","hashOfConfig":"55"},{"size":3786,"mtime":1610341494828,"results":"97","hashOfConfig":"55"},{"size":4947,"mtime":1610367871350,"results":"98","hashOfConfig":"55"},{"size":2574,"mtime":1610329302086,"results":"99","hashOfConfig":"55"},{"size":6231,"mtime":1610329357090,"results":"100","hashOfConfig":"55"},{"size":3446,"mtime":1610329517386,"results":"101","hashOfConfig":"55"},{"size":8863,"mtime":1610973261700,"results":"102","hashOfConfig":"55"},{"size":5013,"mtime":1610801048391,"results":"103","hashOfConfig":"55"},{"size":2814,"mtime":1610329532302,"results":"104","hashOfConfig":"55"},{"size":2815,"mtime":1610363932215,"results":"105","hashOfConfig":"55"},{"size":4303,"mtime":1610364423133,"results":"106","hashOfConfig":"55"},{"size":1188,"mtime":1610329801094,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wn04vy",{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"112"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"112"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"112"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"112"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"112"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\index.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\store.js",[],["225","226"],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\App.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\reducers\\productReducers.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\reducers\\orderReducers.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\reducers\\cartReducers.js",["227","228","229"],"import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_CLEAR_ITEMS,\r\n  SET_CART_ITEM,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n      // return {\r\n      //   ...state,\r\n      //   cartItems: item\r\n      // }\r\n      if(action.logged) {\r\n        return {\r\n          ...state,\r\n          cartItems: item\r\n        }\r\n      } else {\r\n        const existItem = state.cartItems.find((x) => x.productId == item.productId)\r\n        if (existItem) {\r\n          return {\r\n            ...state,\r\n            cartItems: state.cartItems.map((x) =>\r\n              x.productId == existItem.productId ? item : x\r\n            ),\r\n          }\r\n        } else {\r\n          return {\r\n            ...state,\r\n            cartItems: [...state.cartItems, item],\r\n          }\r\n        }\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.productId != action.payload),\r\n      }\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      }\r\n    case SET_CART_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\reducers\\userReducers.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\reducers\\categoryReducers.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\Header.js",["230","231"],"import React, { useEffect } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\n// import SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\nimport { listCategories } from '../actions/categoryActions'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { categories, loading } = useSelector((state) => state.categoryList)\r\n  const cart = useSelector((state) => state.cart)\r\n  const { userInfo } = userLogin\r\n  const { cartItems } = cart\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(listCategories())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>Andrew's Nissan Parts Store</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            {/* <Route render={({ history }) => <SearchBox history={history} />} /> */}\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart' className=\"cart\">\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i> Cart\r\n                  {\r\n                    cartItems && cartItems.length > 0 && \r\n                    <span className=\"cart-badge\">{cartItems.reduce((acc, item) => acc + item.quantity, 0)}</span>\r\n                  }\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              <NavDropdown title=\"Shop\" id=\"shop\">\r\n                {categories && categories.map((category) => (\r\n                  <LinkContainer to={`/category/${category.name}`} key={category._id}>\r\n                    <NavDropdown.Item>\r\n                      {category.name}\r\n                    </NavDropdown.Item>\r\n                  </LinkContainer>\r\n                ))}\r\n              </NavDropdown>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/categorylist'>\r\n                    <NavDropdown.Item>Brands</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/subcategorylist'>\r\n                    <NavDropdown.Item>Models</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\constants\\orderConstants.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\constants\\productConstants.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\constants\\cartConstants.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\constants\\userConstants.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\constants\\categoryConstants.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\actions\\userActions.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\serviceWorker.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\Footer.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\actions\\categoryActions.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\ProductCarousel.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\actions\\productActions.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\Loader.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\Message.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\Paginate.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\Product.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\Rating.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\FormContainer.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\SignupProvider.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\Icon.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\constants\\key.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\Meta.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\actions\\cartActions.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\ContentProvider.js",["232"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCart } from '../actions/cartActions'\r\nimport { listCategories } from '../actions/categoryActions'\r\nimport { listSubcategories } from '../actions/subcategoryAction'\r\n\r\nconst ContentProvider = ({ children }) => {\r\n  const dispatch = useDispatch()\r\n  \r\n  useEffect(() => {\r\n    dispatch(getCart())\r\n    dispatch(listCategories())\r\n    dispatch(listSubcategories())\r\n  }, [dispatch])\r\n  return (\r\n    <div>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContentProvider","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\actions\\orderActions.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\components\\TakeMoney.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\auth\\LoginPage.js",["233"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport FormContainer from '../../components/FormContainer'\r\nimport { login } from '../../actions/userActions'\r\nimport SignupProvider from '../../components/SignupProvider'\r\n\r\nconst LoginPage = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        <h1>Sign In</h1>\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Sign In\r\n          </Button>\r\n        </Form>\r\n        <Row className='py-3'>\r\n          <Col\r\n            xs={{ size: 12, order: 2 }} \r\n            md={{ size: '6', order: 1 }}\r\n          >\r\n            New Customer?{' '}\r\n            <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n              Register\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <Col \r\n          xs={{ size: 12, order: 1 }} \r\n          md={{ size: '6', order: 2 }}\r\n        >\r\n        {/* <SignupProvider /> */}\r\n        </Col>\r\n\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\layout\\HomePage.js",["234","235","236","237"],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\cart\\CartPage.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\profile\\ProfilePage.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\user\\UserEditPage.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\products\\ProductEditPage.js",["238","239"],"import axios from 'axios'\r\nimport React, { useState, useEffect, useCallback } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport FormContainer from '../../components/FormContainer'\r\nimport { listProductDetails, updateProduct, createProduct } from '../../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET, PRODUCT_CREATE_RESET } from '../../constants/productConstants'\r\n\r\n\r\nconst ProductEditPage = ({ match, history, isCreate }) => {\r\n  const productId = !isCreate && match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [subCategory, setSubcategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [tax, setTax] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const { categories, loading: isCategoryLoading } = useSelector((state) => state.categoryList)\r\n  const { subcategories, loading: isSubcategoryLoading } = useSelector((state) => state.subcategoryList)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  const getSubcategoryName = useCallback((product) => {\r\n    if(!product.subCategory) return ''\r\n    const subcategory = subcategories.filter(subcategory => subcategory._id == product.subCategory)\r\n    return subcategory[0] && subcategory[0].name\r\n  }, [subcategories])\r\n\r\n  const filteredSubcategories = React.useMemo(() => {\r\n    return subcategories.filter(subcategory => subcategory.category._id == category)\r\n  }, [category, subcategories])\r\n\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n  } = productCreate\r\n\r\n  useEffect(() => {\r\n    // dispatch(listCategories())\r\n    // dispatch(listSubcategories())\r\n    if(isCreate) {\r\n      if (successCreate) {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n        history.push('/admin/productlist')\r\n      }\r\n    } else {\r\n      if (successUpdate) {\r\n        dispatch({ type: PRODUCT_UPDATE_RESET })\r\n        history.push('/admin/productlist')\r\n      } else {\r\n        if (!product.name || product._id !== productId) {\r\n          dispatch(listProductDetails(productId))\r\n        } else {\r\n          setName(product.name)\r\n          setPrice(product.price)\r\n          setImage(product.image)\r\n          setCategory(product.category.name)\r\n          setCountInStock(product.countInStock)\r\n          setTax(product.priceWithTax)\r\n          setDescription(product.description)\r\n          setSubcategory(getSubcategoryName(product))\r\n        }\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate, successCreate, isCreate, getSubcategoryName])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if(isCreate) {\r\n      dispatch(\r\n        createProduct({\r\n          name,\r\n          price,\r\n          image,\r\n          category,\r\n          subCategory,\r\n          description,\r\n          countInStock,\r\n          priceWithTax: tax\r\n        })\r\n      )\r\n    } else {\r\n      dispatch(\r\n        updateProduct({\r\n          _id: productId,\r\n          name,\r\n          price,\r\n          image,\r\n          category,\r\n          subCategory,\r\n          description,\r\n          countInStock,\r\n          priceWithTax: tax\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>{isCreate ? 'Create ' : 'Edit '} a Product</h1>\r\n        {(loadingUpdate || loadingCreate) && <Loader />}\r\n        {(errorUpdate || errorCreate) && <Message variant='danger'>{isCreate ? errorCreate : errorUpdate}</Message>}\r\n        {loading && isCategoryLoading && isSubcategoryLoading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            {/* <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group> */}\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            \r\n            <Form.Group controlId='tax'>\r\n              <Form.Label>Tax</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter Tax'\r\n                value={tax}\r\n                onChange={(e) => setTax(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            {/* <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group> */}\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                as='select'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              >\r\n                <option></option>\r\n                {\r\n                  categories.map(category => (\r\n                    <option key={category._id} value={category._id}>\r\n                      {category.name}\r\n                    </option>\r\n                  ))\r\n                }\r\n              </Form.Control>\r\n            </Form.Group>\r\n            {category && <Form.Group controlId='category'>\r\n              <Form.Label>Model</Form.Label>\r\n              <Form.Control\r\n                as='select'\r\n                placeholder='Enter Model'\r\n                value={subCategory}\r\n                onChange={(e) => setSubcategory(e.target.value)}\r\n              >\r\n                <option></option>\r\n                {\r\n                  filteredSubcategories.map(subcategory => (\r\n                    <option key={subcategory._id} value={subcategory._id}>\r\n                      {subcategory.name}\r\n                    </option>\r\n                  ))\r\n                }\r\n              </Form.Control>\r\n            </Form.Group>}\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                row={8}\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              {isCreate ? 'Create' : 'Update'}\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditPage\r\n","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\categories\\CategoryListPage.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\subcategories\\SubcategoryListPage.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\categories\\CategoryEditPage.js",["240"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport FormContainer from '../../components/FormContainer'\r\n\r\nimport { createCategory, updateCategory } from '../../actions/categoryActions'\r\nimport { CATEGORY_UPDATE_RESET, CATEGORY_CREATE_RESET } from '../../constants/categoryConstants'\r\n\r\nconst CategoryEditPage = ({ match, history, isCreate }) => {\r\n  const categoryId = !isCreate && match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  \r\n  const categoryUpdate = useSelector((state) => state.categoryUpdate)\r\n  const categoryCreate = useSelector((state) => state.categoryCreate)\r\n  const { loading, categories, error } = useSelector((state) => state.categoryList)\r\n  const selectedCategory = React.useMemo(() => {\r\n    return categories.filter(category => category._id == categoryId)[0]\r\n  }, [categories, categoryId])\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = categoryUpdate\r\n\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n  } = categoryCreate\r\n\r\n  useEffect(() => {\r\n    if(isCreate) {\r\n      if (successCreate) {\r\n        dispatch({ type: CATEGORY_CREATE_RESET })\r\n        history.push('/admin/categorylist')\r\n      }\r\n    } else {\r\n      if (successUpdate) {\r\n        dispatch({ type: CATEGORY_UPDATE_RESET })\r\n        history.push('/admin/categorylist')\r\n      } else {\r\n        setName(selectedCategory.name)\r\n        setDescription(selectedCategory.description)\r\n      }\r\n    }\r\n  }, [dispatch, history, categoryId, selectedCategory, successUpdate, successCreate, isCreate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if(isCreate) {\r\n      dispatch(\r\n        createCategory({\r\n          name,\r\n          description,\r\n        })\r\n      )\r\n    } else {\r\n      dispatch(\r\n        updateCategory({\r\n          _id: categoryId,\r\n          name,\r\n          description,\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/categorylist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>{isCreate ? 'Create ' : 'Edit '} a Brand</h1>\r\n        {(loadingUpdate || loadingCreate) && <Loader />}\r\n        {(errorUpdate || errorCreate) && <Message variant='danger'>{isCreate ? errorCreate : errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              {isCreate ? 'Create' : 'Update'}\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CategoryEditPage\r\n","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\subcategories\\SubcategoryEditPage.js",["241"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport FormContainer from '../../components/FormContainer'\r\n\r\nimport { createSubcategory, updateSubcategory } from '../../actions/subcategoryAction'\r\nimport { SUBCATEGORY_UPDATE_RESET, SUBCATEGORY_CREATE_RESET } from '../../constants/subcategoryConstants'\r\n\r\nconst SubcategoryEditPage = ({ match, history, isCreate }) => {\r\n  const subcategoryId = !isCreate && match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  \r\n  const subcategoryUpdate = useSelector((state) => state.subcategoryUpdate)\r\n  const subcategoryCreate = useSelector((state) => state.subcategoryCreate)\r\n  // const subcategoryDetails = useSelector((state) => state.subcategoryDetails)\r\n  const [category, setCategory] = useState('')\r\n  const { categories, loading: isCategoryLoading } = useSelector((state) => state.categoryList)\r\n  // const { loading, error, subcategory } = subcategoryDetails\r\n  const { loading, subcategories, error } = useSelector((state) => state.subcategoryList)\r\n  const selectedSubcategory = React.useMemo(() => {\r\n    return subcategories.filter(subcategory => subcategory._id == subcategoryId)[0]\r\n  }, [subcategories, subcategoryId])\r\n\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = subcategoryUpdate\r\n\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n  } = subcategoryCreate\r\n\r\n  useEffect(() => {\r\n    if(isCreate) {\r\n      if (successCreate) {\r\n        dispatch({ type: SUBCATEGORY_CREATE_RESET })\r\n        history.push('/admin/subcategorylist')\r\n      }\r\n    } else {\r\n      if (successUpdate) {\r\n        dispatch({ type: SUBCATEGORY_UPDATE_RESET })\r\n        history.push('/admin/subcategorylist')\r\n      } else {\r\n        setName(selectedSubcategory.name)\r\n        setDescription(selectedSubcategory.description)\r\n      }\r\n    }\r\n  }, \r\n  [\r\n    dispatch,\r\n    history,\r\n    successUpdate,\r\n    successCreate,\r\n    isCreate,\r\n    subcategoryId,\r\n    selectedSubcategory\r\n  ])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if(isCreate) {\r\n      dispatch(\r\n        createSubcategory({\r\n          name,\r\n          description,\r\n          category\r\n        })\r\n      )\r\n    } else {\r\n      dispatch(\r\n        updateSubcategory({\r\n          _id: subcategoryId,\r\n          name,\r\n          category,\r\n          description,\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/subcategorylist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>{isCreate ? 'Create ' : 'Edit '} a Model</h1>\r\n        {(loadingUpdate || loadingCreate) && <Loader />}\r\n        {(errorUpdate || errorCreate) && <Message variant='danger'>{isCreate ? errorCreate : errorUpdate}</Message>}\r\n        {loading && isCategoryLoading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                as='select'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              >\r\n                <option></option>\r\n                {\r\n                  categories.map(category => (\r\n                    <option key={category._id} value={category._id}>\r\n                      {category.name}\r\n                    </option>\r\n                  ))\r\n                }\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              {isCreate ? 'Create' : 'Update'}\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SubcategoryEditPage\r\n","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\orders\\OrderListPage.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\orders\\OrderPage.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\auth\\RegisterPage.js",["242"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport FormContainer from '../../components/FormContainer'\r\nimport { register } from '../../actions/userActions'\r\nimport SignupProvider from '../../components/SignupProvider'\r\n\r\nconst RegisterPage = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      <Col \r\n          xs={{ size: 12, order: 1 }} \r\n          md={{ size: '6', order: 2 }}\r\n        >\r\n          {/* <SignupProvider /> */}\r\n        </Col>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterPage\r\n","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\products\\ProductPage.js",["243"],"import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../../components/Rating'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport Meta from '../../components/Meta'\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../../actions/productActions'\r\nimport { addToCart } from '../../actions/cartActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../../constants/productConstants'\r\n\r\nconst ProductPage = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n  const { subcategories } = useSelector((state) => state.subcategoryList)\r\n\r\n  const {\r\n    success: successProductReview,\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate\r\n\r\n  const getSubcategoryName = useCallback((product) => {\r\n    if(!product.subCategory) return ''\r\n    const subcategory = subcategories.filter(subcategory => subcategory._id == product.subCategory)\r\n    return subcategory[0] && subcategory[0].name\r\n  }, [subcategories])\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0)\r\n      setComment('')\r\n    }\r\n    // if (!product._id || product._id !== match.params.id) {\r\n      dispatch(listProductDetails(match.params.id))\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    // }\r\n  }, [dispatch, match, successProductReview])\r\n\r\n  const addToCartHandler = () => {\r\n    dispatch(addToCart(product._id, Number(qty)))\r\n    history.push(`/cart`)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={3}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={6}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>Model: {product.category && product.category.name}</ListGroup.Item>\r\n                <ListGroup.Item>Generation: {product.subCategory && getSubcategoryName(product)}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <>\r\n                    <p>Description: </p>\r\n                    <ul>\r\n                      <div dangerouslySetInnerHTML={{ __html: product.description }} />\r\n                    </ul>\r\n                  </>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {successProductReview && (\r\n                    <Message variant='success'>\r\n                      Review submitted successfully\r\n                    </Message>\r\n                  )}\r\n                  {loadingProductReview && <Loader />}\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type='submit'\r\n                        variant='primary'\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductPage\r\n","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\products\\ProductListPage.js",["244","245"],"import React, { useCallback, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport Paginate from '../../components/Paginate'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n} from '../../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../../constants/productConstants'\r\nimport { listCategories } from '../../actions/categoryActions'\r\nimport { listSubcategories } from '../../actions/subcategoryAction'\r\n\r\nconst ProductListPage = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  const { categories } = useSelector((state) => state.categoryList)\r\n  const { subcategories } = useSelector((state) => state.subcategoryList)\r\n\r\n  const getCategoryName = useCallback((product) => {\r\n    if(!product.category) return ''\r\n    const category = categories.filter(category => category._id == product.category._id)\r\n    return category[0] && category[0].name\r\n  }, [categories])\r\n\r\n  const getSubcategoryName = useCallback((product) => {\r\n    if(!product.subCategory) return ''\r\n    const subcategory = subcategories.filter(subcategory => subcategory._id == product.subCategory)\r\n    console.log(subcategory)\r\n    return subcategory[0] && subcategory[0].name\r\n  }, [subcategories])\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ])\r\n\r\n  const deleteHandler = (id) => {\r\n  if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    history.push(`/admin/product/create`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>BRAND</th>\r\n                <th>MODEL</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{getCategoryName(product)}</td>\r\n                  <td>{getSubcategoryName(product)}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListPage\r\n","E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\pages\\user\\UserListPage.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\reducers\\subCategoryReducers.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\actions\\subcategoryAction.js",[],"E:\\WorkSpace\\Practical Projects\\eCommerce\\e-commerce\\frontend\\src\\constants\\subcategoryConstants.js",[],{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":27,"column":67,"nodeType":"252","messageId":"253","endLine":27,"endColumn":69},{"ruleId":"250","severity":1,"message":"251","line":32,"column":27,"nodeType":"252","messageId":"253","endLine":32,"endColumn":29},{"ruleId":"250","severity":1,"message":"254","line":45,"column":62,"nodeType":"252","messageId":"253","endLine":45,"endColumn":64},{"ruleId":"255","severity":1,"message":"256","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":15},{"ruleId":"255","severity":1,"message":"259","line":14,"column":23,"nodeType":"257","messageId":"258","endLine":14,"endColumn":30},{"ruleId":"255","severity":1,"message":"260","line":2,"column":23,"nodeType":"257","messageId":"258","endLine":2,"endColumn":34},{"ruleId":"255","severity":1,"message":"261","line":9,"column":8,"nodeType":"257","messageId":"258","endLine":9,"endColumn":22},{"ruleId":"250","severity":1,"message":"251","line":31,"column":19,"nodeType":"252","messageId":"253","endLine":31,"endColumn":21},{"ruleId":"250","severity":1,"message":"251","line":32,"column":59,"nodeType":"252","messageId":"253","endLine":32,"endColumn":61},{"ruleId":"262","severity":1,"message":"263","line":66,"column":61,"nodeType":"264","messageId":"265","endLine":66,"endColumn":63},{"ruleId":"250","severity":1,"message":"251","line":67,"column":51,"nodeType":"252","messageId":"253","endLine":67,"endColumn":53},{"ruleId":"250","severity":1,"message":"251","line":42,"column":77,"nodeType":"252","messageId":"253","endLine":42,"endColumn":79},{"ruleId":"250","severity":1,"message":"251","line":47,"column":73,"nodeType":"252","messageId":"253","endLine":47,"endColumn":75},{"ruleId":"250","severity":1,"message":"251","line":25,"column":55,"nodeType":"252","messageId":"253","endLine":25,"endColumn":57},{"ruleId":"250","severity":1,"message":"251","line":29,"column":64,"nodeType":"252","messageId":"253","endLine":29,"endColumn":66},{"ruleId":"255","severity":1,"message":"261","line":9,"column":8,"nodeType":"257","messageId":"258","endLine":9,"endColumn":22},{"ruleId":"250","severity":1,"message":"251","line":40,"column":77,"nodeType":"252","messageId":"253","endLine":40,"endColumn":79},{"ruleId":"250","severity":1,"message":"251","line":46,"column":65,"nodeType":"252","messageId":"253","endLine":46,"endColumn":67},{"ruleId":"250","severity":1,"message":"251","line":52,"column":77,"nodeType":"252","messageId":"253","endLine":52,"endColumn":79},"no-native-reassign",["266"],"no-negated-in-lhs",["267"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'useSelector' is defined but never used.","'SignupProvider' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]